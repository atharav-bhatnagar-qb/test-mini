;;
;; Header files for Pot
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; __tact_float_to_string
slice __tact_float_to_string(int src, int digits) inline_ref;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Affiliate$_store
builder $Affiliate$_store(builder build_0, (slice) v) inline;

;; $Affiliate$_store_cell
cell $Affiliate$_store_cell((slice) v) inline;

;; $WithdrawAmount$_load
(slice, ((int))) $WithdrawAmount$_load(slice sc_0) inline;

;; $GenerateReferral$_load
(slice, ((slice, slice, slice))) $GenerateReferral$_load(slice sc_0) inline;

;; $CandidateRegistered$_load
(slice, ((int, slice, slice))) $CandidateRegistered$_load(slice sc_0) inline;

;; $Pot$_store
builder $Pot$_store(builder build_0, (slice) v) inline;

;; $Pot$_load
(slice, ((slice))) $Pot$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $Referral$init$_store
builder $Referral$init$_store(builder build_0, (slice, slice) v) inline;

;; $Pot$_contract_init
(slice) $Pot$_contract_init() impure inline_ref;

;; $Pot$_contract_load
(slice) $Pot$_contract_load() impure inline_ref;

;; $Pot$_contract_store
() $Pot$_contract_store((slice) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Int$_fun_toCoinsString
slice $Int$_fun_toCoinsString(int $self) impure inline;

;; $Referral$_init_child
(cell, cell) $Referral$_init_child(cell sys', slice $jobId, slice $link) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $Pot$_fun_ownerOnly
((slice), ()) $Pot$_fun_ownerOnly((slice) $self) impure inline_ref;

;; $Pot$_fun_balance
((slice), slice) $Pot$_fun_balance((slice) $self) impure inline_ref;

;; $Pot$_fun_address
((slice), slice) $Pot$_fun_address((slice) $self) impure inline_ref;

;; $Pot$_fun_owner
((slice), slice) $Pot$_fun_owner((slice) $self) impure inline_ref;

;; $Pot$_fun_getRefInit
((slice), (cell, cell)) $Pot$_fun_getRefInit((slice) $self, slice $jobId, slice $link) impure inline_ref;

;; $Pot$_fun_linkAddress
((slice), slice) $Pot$_fun_linkAddress((slice) $self, slice $jobId, slice $link) impure inline_ref;

;; $Pot$_fun_forward
((slice), ()) $Pot$_fun_forward((slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Pot$_fun_reply
((slice), ()) $Pot$_fun_reply((slice) $self, cell $body) impure inline;

;; $Pot$_fun_notify
((slice), ()) $Pot$_fun_notify((slice) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_bounce
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce(slice to, int value, int mode, int bounce) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_code_data_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_code_data_body(slice to, int value, int mode, int bounce, cell code, cell data, cell body) inline;

;; $Affiliate$_constructor_affiliate
((slice)) $Affiliate$_constructor_affiliate(slice affiliate) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
